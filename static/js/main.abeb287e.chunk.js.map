{"version":3,"sources":["components/Search/Search.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","App.tsx","index.tsx"],"names":["Search","state","query","handleChange","event","value","target","setState","prevProps","prevState","onFilter","this","className","htmlFor","type","id","placeholder","onChange","React","Component","MovieCard","movie","imdbUrl","imgUrl","description","title","src","alt","href","MoviesList","movies","map","imdbId","App","moviesFromServer","filterMovies","lowerQuery","toLowerCase","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"sTAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAFX,EAcEC,aAAe,SAACC,GACd,IAAQC,EAAUD,EAAME,OAAhBD,MAER,EAAKE,SAAS,CACZL,MAAOG,KAlBb,wDAKE,SAAmBG,EAAkBC,GACnC,IAAQC,EAAaF,EAAbE,SACAR,EAAUS,KAAKV,MAAfC,MAEJO,IAAcE,KAAKV,OACrBS,EAASR,KAVf,oBAsBE,WACE,IAAQA,EAAUS,KAAKV,MAAfC,MAER,OACE,mCACE,qBAAKU,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOC,QAAQ,eAAeD,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEE,KAAK,OACLC,GAAG,eACHH,UAAU,QACVI,YAAY,mBACZX,MAAOH,EACPe,SAAUN,KAAKR,4BAxC/B,GAA4Be,IAAMC,WCHrBC,G,YAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEc,IAAKH,EACLI,IAAI,kBAIV,sBAAKf,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEc,IAAI,wBACJC,IAAI,aAIV,qBAAKf,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2Ba,SAI/B,sBAAKb,UAAU,UAAf,UACGY,EACD,uBACA,mBAAGI,KAAMN,EAAT,6BChCGO,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKlB,UAAU,SAAf,SACGkB,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMW,cCFjBC,EAAb,4MACEhC,MAAe,CACb6B,OAAQI,GAFZ,EAKEC,aAAe,SAACjC,GACd,IAAMkC,EAAalC,EAAMmC,cAEzB,EAAK9B,SAAS,CACZuB,OAAQ,YAAII,GACTI,QAAO,SAAAjB,GAAK,OAAIA,EAAMI,MAAMY,cAAcE,SAASH,IACnDf,EAAMG,YAAYa,cAAcE,SAASH,SAXlD,4CAeE,WACE,IAAQN,EAAWnB,KAAKV,MAAhB6B,OAER,OACE,sBAAKlB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAQF,SAAUC,KAAKwB,iBAEzB,qBAAKvB,UAAU,UAAf,+BAIA,cAAC,EAAD,CAAYkB,OAAQA,WA3B5B,GAAyBZ,IAAMC,WCN/BqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.abeb287e.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  onFilter: (query: string) => void;\n}\n\ninterface State {\n  query: string;\n}\n\nexport class Search extends React.Component<Props, State> {\n  state: State = {\n    query: '',\n  };\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { onFilter } = prevProps;\n    const { query } = this.state;\n\n    if (prevState !== this.state) {\n      onFilter(query);\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      query: value,\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                value={query}\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './MoviesList.scss';\nimport React from 'react';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbId} movie={movie} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport moviesFromServer from './api/movies.json';\nimport { Search } from './components/Search';\nimport { MoviesList } from './components/MoviesList';\n\ntype State = {\n  movies: Movie[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  filterMovies = (query: string) => {\n    const lowerQuery = query.toLowerCase();\n\n    this.setState({\n      movies: [...moviesFromServer]\n        .filter(movie => movie.title.toLowerCase().includes(lowerQuery)\n      || movie.description.toLowerCase().includes(lowerQuery)),\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <Search onFilter={this.filterMovies} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n\n        <MoviesList movies={movies} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}